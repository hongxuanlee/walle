var RESOURCE_PREFIX = "res-require-";
var RESOURCE_CONTEXT_PREFIX = "res-require-content-";

var collectRunCode = function(filePath, ext, context) {
	var sourceCode = getResourceCode(filePath, ext);
	var resId = RESOURCE_PREFIX + ext;
	var funName = context.parent.funName;
	funName = funName || "";
	if (sourceCode) {
		context.addGlobalCode("lemur.collect('" + resId + "' , function(){" + sourceCode + "},'" + funName + "');");
	}
}

var collectContentCode = function(filePath, ext, context) {
	var resContentId = RESOURCE_CONTEXT_PREFIX + ext;
	var funName = context.parent.funName;
	funName = funName || "";
	context.addGlobalCode("lemur.collect('" + resContentId + "', function(){lemur.echo('" + filePath + "')},'" + funName + "');");
}

var getExt = function(filePath) {
	var filePath = filePath.split("?")[0];
	return filePath.split(".")[1];
}

var getResourceCode = function(filePath, ext) {
	if (ext == "js") {
		return "lemur.echo('<script src=\"" + filePath + "\" type=\"text/javascript\">')"
	} else if (ext == "css") {
		return "lemur.echo('<link href=\"" + filePath + "\" rel=\"stylesheet\">')"
	}
}

module.exports = {
	tagToken: {
		tagName: "require",
		tagType: "inline"
	},
	process: function(tagNode) {},
	interpret: function(token, childCodes) {
		var name = token.__attributeMap.name;
		if (!name) return "";
		eval("var filePath = " + name);
		var ext = getExt(filePath);
		if (!ext) return "";
		//
		collectRunCode(filePath, ext, this);
		//
		collectContentCode(filePath, ext, this);
	}
}