var exrcoreMap = require("./extcoreMap.js");
var sysPluginMap = require("./sysPluginMap.js");

var addSysPlugins = function(config) {
	var pluginMap = config.plugin;
	for (var pluginType in sysPluginMap) {
		pluginMap[pluginType] = pluginMap[pluginType] || [];
		var sysPlugins = sysPluginMap[pluginType];
		pluginMap[pluginType] = pluginMap[pluginType].concat(sysPlugins);
	}
}

var parsePluginConfig = function(config) {
	var pluginMap = config.plugin;
	for (var pluginType in pluginMap) {
		var plugins = pluginMap[pluginType];
		var norm = exrcoreMap[pluginType];
		if (norm) {
			for (var i = 0; i < plugins.length; i++) {
				var plugin = plugins[i];
				parsePlugin(plugin, config, norm);
			}
		}
	}
}

var parsePlugin = function(plugin, config, norm) {
	var pluginResult = norm.parse(plugin, {
		leftDelimiter: config.leftDelimiter,
		rightDelimiter: config.rightDelimiter
	});
	if (!pluginResult) return;
	config.tokenGrammers = config.tokenGrammers.concat(pluginResult.tokens);
	var processPlugin = pluginResult.processPlugin;
	if (processPlugin && processPlugin.process) {
		config.processorPluginMap[processPlugin.name] = processPlugin.process;
	}

	var interpretPlugin = pluginResult.interpretPlugin;
	if (interpretPlugin && interpretPlugin.interpret) {
		config.interpreterPluginMap[interpretPlugin.type] = interpretPlugin.interpret;
	}
}

module.exports = {
	parse: function(config) {
		addSysPlugins(config);
		parsePluginConfig(config);
	}
}