var lemur = require("cl-lemur");
var pluginConfParser = require("./pluginConfParser.js");
var path = require("path");

var lemurWrapperPath = path.join(__dirname, "./lemurWrapper/lemurWrapper.js");

module.exports = {
	/**
	 * config
	 *     rightDelimiter
	 * 	   leftDelimiter
	 *     tokenGrammers
	 *     tokenConf
	 *     processorPluginMap
	 *     interpreterPluginMap
	 *     interfaceConf
	 *     		lemurInject
	 *     plugin
	 *          pluginType  [ {
	 *                           tagToken: {
	 *                               tagName:"require",
	 *                               tagType:"inline"
	 *                           },
	 *                         process:function(tagNode){},
	 *                         interpret:function(token, childCodes){}
	 *                       } ]
	 */
	create: function(config) {
		return createEngine(config);
	}
}

var createEngine = function(config) {
	config = initConfig(config);
	pluginConfParser.parse(config);
	var engine = lemur.create(config);
	return {
		compile: function(source) {
			return engine.compile(source);
		}
	}
}

var initConfig = function(config) {
	config = config || {};
	config.leftDelimiter = config.leftDelimiter || "<#";
	config.rightDelimiter = config.rightDelimiter || "#>";
	config.tokenGrammers = config.tokenGrammers || [];
	config.processorPluginMap = config.processorPluginMap || {};
	config.interpreterPluginMap = config.interpreterPluginMap || {};
	config.plugin = config.plugin || {};
	config.interfaceConf = config.interfaceConf || {};
	config.interfaceConf.lemurWrapper = config.interfaceConf.lemurWrapper || "require('" + lemurWrapperPath + "')"
	return config;
}