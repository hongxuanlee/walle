/**
 * @goal turn lemur interface codes to the code that could run in browsers.
 */
var path = require("path");
var fs = require("fs");

var lemurInterfaceConfig = require("./lemurInterfaceConfig.js");

var requireCodeReg = /require\s*\(["'](.*)['"]\)/g;

var resolve = function(jsPath) {
	var jsCode = fs.readFileSync(jsPath, "utf-8");
	// replace all require sentences
	jsCode = jsCode.replace(requireCodeReg, function(word, r1) {
		var newFilePath = path.join(jsPath + "/../", r1);
		return resolve(newFilePath);
	});
	// wrapCommonJs
	return wrapCommonJs(jsCode);
}

var wrapCommonJs = function(jsCode) {
	return "(function(){" +
		"var module = {exports:{}};" +
		"var exports = module.exports;\n" +
		jsCode +
		"\n;return module.exports;" +
		"})();";
}

var generateBrowserLemur = function() {
	var browsersCode = "var Lemur = " + resolve(lemurInterfaceConfig.exports) + resolve(lemurInterfaceConfig.wrapper);
	fs.writeFileSync(lemurInterfaceConfig.targetfile, browsersCode, "utf-8");
}


generateBrowserLemur();