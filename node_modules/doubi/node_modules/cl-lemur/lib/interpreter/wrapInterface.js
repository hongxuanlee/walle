var path = require("path");

var wrapInterface = function(bodyCode, interfaceConf) {
	interfaceConf = interfaceConf || {};

	var importLemurCode = generateImportLumerCode(interfaceConf);
	var bodyCode = "var lemur = Lemur.create();" +
		bodyCode +
		"return lemur;";
	importLemurCode = wrapImportCodeWithException(importLemurCode);
	// support for browser
	importLemurCode = interfaceConf.lemurInject || importLemurCode;
	bodyCode = wrapBodyCode(bodyCode);

	return "(function(Lemur){" +
		bodyCode +
		"})(" + importLemurCode + ");";
}

var generateImportLumerCode = function(interfaceConf) {
	var lemurPath = interfaceConf.lemurPath || path.join(__dirname, "./lemurInterface/lemur.js");
	lemurPath = lemurPath.replace(/\\/g, "/");
	var lemurCode = "var Lemur = require('" + lemurPath + "');";
	var lemurWrapper = interfaceConf.lemurWrapper;
	if (lemurWrapper) {
		lemurCode += "(" + lemurWrapper + ")(Lemur);";
	}
	return lemurCode;
}

var wrapImportCodeWithException = function(importLemurCode) {
	return "function(){try{" +
		importLemurCode +
		"return Lemur" +
		"}catch(e){" +
		"throw new Error('Error happened when import lemur lib. '+e.toString());" +
		"}}()"
}

var wrapBodyCode = function(bodyCode) {
	return "try{" + bodyCode + "}catch(e){" +
		"throw new Error('Error happened when execute template. '+e.toString());" +
		"}";
}

module.exports = wrapInterface;